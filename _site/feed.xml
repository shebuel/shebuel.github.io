<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shebuel Asher Paul</title>
    <description>Security Analyst</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 01 Apr 2020 16:30:00 -0700</pubDate>
    <lastBuildDate>Wed, 01 Apr 2020 16:30:00 -0700</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Deception in Cybersecurity</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;All warfare is based on deception. Hence, when we are able to attack, we must seem unable; when using our forces, we must appear inactive; when we are near, we must make the enemy believe we are far away; when far away, we must make him believe we are near. &lt;cite&gt; Sun tzu, The Art of War &lt;cite&gt;&lt;/cite&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-is-deception-technology&quot;&gt;What is deception technology…&lt;/h2&gt;

&lt;p&gt;Deception technology is essentially a Cybersecurity defense mechanism which is used in conjuncture with other defense measure such as Firewalls, EDR, IDS/IPS. It is based off the assumption that we know that an attacker is eventually going to find a way into the system and no environment is completely air-gapped. Deception technology is a way to make an attacker show himself/herself by presenting a &lt;strong&gt;bait&lt;/strong&gt;, which is essentially an unpatched easy to hack system, and waiting for them to fall for it( which they usually do).&lt;/p&gt;

&lt;p&gt;Honeypots are the first thing that come to mind when I think about deceptive technology as I imagine would be the case for most people. It is a proactive, automated and easy to implement approach to improve the overall security of the organization.&lt;/p&gt;

&lt;h2 id=&quot;why-deception-technology&quot;&gt;Why deception Technology…&lt;/h2&gt;

&lt;p&gt;The real question is &lt;strong&gt;Why not?&lt;/strong&gt;. It is true that higher levels of implementation of deception technology are harder to implement but getting started with it is very simple and often underrated. It could be as simple as a file with a click-bait worthy name and a canary token!&lt;/p&gt;

&lt;p&gt;“The perimeter is dead”. Which means there are a lot more attack vectors than there was once and there are a lot more innovative attackers around which means that it is more crucial now than ever to make sure that if an attacker ever gains access into the network and dealt with. This may involve straight out blocking them access or even better observing their actions while restricting their access to block future attacks of such kind. This can be essential against new types of malware since this now gives us an environment to observe and interact with it without the whole building coming down!&lt;/p&gt;

&lt;h2 id=&quot;why-is-it-effective&quot;&gt;Why is it effective…&lt;/h2&gt;

&lt;p&gt;Well to put it bluntly… It’s because attackers are lazy. They do not want to put more effort to break into something than they need to and this is a weakness that we can exploit really easily. Just imagine if an attacker sees a file named “password.txt” in a compromised user’s system. That is literally the most obvious example of a bait there is but there is still a very high possibilty that the attacker is going to open it. Now all the hours and efforts that he has put into breaking in and staying hidden has essentially gone to waste since the security team knows with certainity that that user is never going to access that file.&lt;/p&gt;

&lt;p&gt;That is a very simplistic example but provides that gist of why deception technology is so effective. The file with the canary token can be easily swapped out with a dedicated misconfigured network or an user account with a easy to crack password. It can also be servers that spam misinformation in the network which makes it hard for the attacker to distinguish between what is real and what’s not. Any method that makes it harder for the attacker is a win for us.&lt;/p&gt;

&lt;h2 id=&quot;so-how-do-i-get-started&quot;&gt;So how do I get started…&lt;/h2&gt;

&lt;p&gt;As I mentioned previously getting started with Deception techniques does not need to be super complicated. It can be as simple as a &lt;a href=&quot;https://canarytokens.org/&quot;&gt;canarytoken&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;assets/images/posts/2020/Selection_001.png&quot; alt=&quot;Canary Token&quot; /&gt;
    
        &lt;figcaption class=&quot;caption-text&quot;&gt;A screenshot of the canarytokens homepage&lt;/figcaption&gt; 
    
&lt;/figure&gt;

&lt;p&gt;For this example, we are just going with the easiest option and choose a word document. In the next screen, we provide the email id to which the alert will be sent to and an alert message to recognize which token produced the alert.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;assets/images/posts/2020/Selection_002.png&quot; alt=&quot;Canary Token&quot; /&gt;
    
        &lt;figcaption class=&quot;caption-text&quot;&gt;A screenshot of the canarytokens homepage&lt;/figcaption&gt; 
    
&lt;/figure&gt;

&lt;p&gt;And finally, when some unsuspecting attacker happens to open it, you immediately get an alert in the email id provided with the attacker’s IP address.&lt;/p&gt;

&lt;p&gt;John Strand from Black Hills information security has a wonderful video about getting started with Cyber Deception which can be found here : &lt;a href=&quot;https://youtu.be/cCxbBz1UbnA&quot;&gt;Getting started with Cyber Deception&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/Deception_in_Cybersecurity</link>
        <guid isPermaLink="true">http://localhost:4000/Deception_in_Cybersecurity</guid>
        
        <category>Cybersecurity</category>
        
        <category>Deception</category>
        
        <category>Defense</category>
        
        
      </item>
    
      <item>
        <title>Secure migration of a server to the Cloud</title>
        <description>&lt;p&gt;&lt;em&gt;I have yet to convert this to a format where I can directly post it to my site so I have just linked it to the actual documentation that I had prepared&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is a project that I did for my Cloud Security course in the University of Maryland, College Park as part of my Master’s in Cybersecurity.&lt;/p&gt;

&lt;p&gt;The main objective of this project was to analyze and implement all of the security and logging features a cloud platform (AWS in my case) has to offer. We were essentially given a server which was a Ubuntu VM running an Apache web server and were expected to deploy it in the cloud with minimum to no down time while making sure that once the server is in the cloud it is resistant to DoS attacks, has proper logging features and alerts setup to detect intruders.&lt;/p&gt;

&lt;p&gt;The name of the server was “Troll World” so every reference to the server is by that name. You can find the documentation for the project &lt;a href=&quot;https://drive.google.com/file/d/1drelRMB746n8cgOpcj7xA9hU1Ud6hV8X/view?usp=sharing&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/placeholder</link>
        <guid isPermaLink="true">http://localhost:4000/placeholder</guid>
        
        <category>AWS</category>
        
        <category>CloudSec</category>
        
        <category>Docs</category>
        
        
      </item>
    
      <item>
        <title>StageFright vulnerability in Android</title>
        <description>&lt;p&gt;As part of a project me and my teammates analyzed the Stagefright vulnerability in Android OS (&amp;lt;7.0) in the libstagefight library which was responsible for media services (Hence the name!)&lt;/p&gt;

&lt;p&gt;Here is a link to the &lt;a href=&quot;https://drive.google.com/file/d/1WR3DA4WI02zbKMXcPN2euaZMzaC09TXp/view?usp=sharing&quot;&gt;final presentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/stagefright</link>
        <guid isPermaLink="true">http://localhost:4000/stagefright</guid>
        
        <category>Reverese Engineering</category>
        
        <category>Android</category>
        
        <category>Vulnerability</category>
        
        
      </item>
    
      <item>
        <title>CTF Writeups</title>
        <description>&lt;p&gt;This is where I post the writeups of all the CTFs that I have did along with what I learnt doing each of them and what challenged me the most about them.&lt;/p&gt;

&lt;p&gt;I was in a hurry to get my site up and running as soon as possible and havent really been able to convert all the writeups I have to a format I can post here. I will get to it as soon as I get the time. Thank you for your patience.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Mar 2020 00:00:00 -0700</pubDate>
        <link>http://localhost:4000/CTF_Writeups</link>
        <guid isPermaLink="true">http://localhost:4000/CTF_Writeups</guid>
        
        <category>CTF</category>
        
        <category>Writeups</category>
        
        
      </item>
    
  </channel>
</rss>
